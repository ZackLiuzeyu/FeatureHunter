% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fh_rf.R
\name{fh_rf}
\alias{fh_rf}
\title{Random Forest Interface}
\usage{
fh_rf(
  train_exp,
  train_labels,
  test_exp,
  labels_list,
  com_genes,
  mnum = c(round(stats::quantile(seq_along(com_genes), probs = 0.25)),
    round(stats::quantile(seq_along(com_genes), probs = 0.5)),
    round(stats::quantile(seq_along(com_genes), probs = 0.75))),
  cutoff = c(0.25, 0.5, 0.75),
  auto_th_method = "auto",
  auto_imbalance_thresh = 0.35,
  auto_pr_vs_roc_gate = 0.5,
  collector = collector
)
}
\arguments{
\item{train_exp}{Training expression matrix (samples x features).}

\item{train_labels}{Binary/factor labels for training set.}

\item{test_exp}{list of external datasets (first = validation B, then C/D/...).}

\item{labels_list}{list of label data.frames (A=1, B=2, ...; first col=ID, second col=label).}

\item{com_genes}{character vector of gene names, used to determine mtry candidates.}

\item{mnum}{candidate mtry values (default = 25\%/50\%/75\% quantiles of \code{length(com_genes)}).}

\item{cutoff}{numeric thresholds (default = \code{c(0.25, 0.5, 0.75)}).}

\item{auto_th_method}{threshold method: "auto" (default), "f1", or "youden".}

\item{auto_imbalance_thresh}{imbalance threshold for auto mode (default 0.35).}

\item{auto_pr_vs_roc_gate}{PR-vs-ROC advantage gate (default 0.5).}

\item{collector}{environment optional results collector.}
}
\value{
collector environment and an invisible list (acc, recall, fs, summary).
}
\description{
Train a Random Forest model with candidate mtry values.
Steps:
\enumerate{
\item Train with 500 trees to get variable importance and pick the best number of trees via OOB error;
\item Retrain with the best number of trees;
\item On validation set B, determine an automatic threshold (Youden/F1/auto) and merge with fixed thresholds;
\item Evaluate F1/Accuracy/Recall on datasets A/B/C/D...;
\item Variable importance is stored into \code{collector$all_result_importance} if provided.
}
}
\examples{
\dontrun{
collector <- new.env()
fh_rf(
  train_exp    = train_exp,
  train_labels = train_labels,
  test_exp     = list(exp_list[[2]], exp_list[[3]], exp_list[[4]]),
  labels_list  = labels_list,
  com_genes    = com_genes,
  collector    = collector
)
}

}
