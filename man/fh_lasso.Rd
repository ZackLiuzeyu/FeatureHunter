% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fh_lasso.R
\name{fh_lasso}
\alias{fh_lasso}
\title{LASSO interface (cv.glmnet, alpha = 1)}
\usage{
fh_lasso(
  train_exp,
  train_labels,
  test_exp,
  labels_list,
  fold = 10,
  cutoff = c(0.25, 0.5, 0.75),
  auto_th_method = "auto",
  auto_imbalance_thresh = 0.35,
  auto_pr_vs_roc_gate = 0.5,
  collector = NULL
)
}
\arguments{
\item{train_exp}{Training expression matrix (rows = samples, cols = features).}

\item{train_labels}{Training labels (0/1 or convertible to 0/1).}

\item{test_exp}{A list: first element = validation set B, others = C/D/….}

\item{labels_list}{List of label data.frames (A=1, B=2, …; first two cols = ID, label).}

\item{fold}{Number of CV folds for \code{cv.glmnet} and stored in result keys.}

\item{cutoff}{Fixed cutoff grid merged with the auto-selected threshold
(default \code{c(0.25, 0.5, 0.75)}).}

\item{auto_th_method}{Threshold method: \code{"youden"} / \code{"f1"} / \code{"auto"} (default).
With \code{"auto"}, \code{decide_threshold_method()} is used to adaptively choose based on
class imbalance and PR vs ROC performance.}

\item{auto_imbalance_thresh}{Imbalance threshold for \code{decide_threshold_method()} (default 0.35).}

\item{auto_pr_vs_roc_gate}{PR-vs-ROC advantage ratio gate for \code{decide_threshold_method()} (default 0.5).}

\item{collector}{Optional environment. If supplied, each cutoff’s results are written
into \code{collector} via \code{.fh_collect()}.}
}
\value{
Returns a \strong{collector environment} (created if not supplied) populated with
\code{all_result_summary}, \code{all_result_acc}, \code{all_result_recall}, \code{all_result_FS};
and (invisibly) a plain list of the current-call results:
\code{list(acc = ..., recall = ..., fs = ..., summary = ...)} for convenience.
Use \code{fh_as_lists(collector)} to convert the environment to plain lists.
}
\description{
Fits \code{glmnet::cv.glmnet(alpha = 1)} on the training set to obtain \code{lambda.min}.
On validation set B, selects a decision threshold and merges it with fixed cutoffs.
Evaluates F1 / Accuracy / Recall on datasets A/B/C/D… and records results.
}
\examples{
\dontrun{
# Initialize a collector (recommended)
collector <- new.env(parent = emptyenv())

res <- fh_lasso(
  train_exp    = train_exp,
  train_labels = train_labels,
  test_exp     = list(exp_list[[2]], exp_list[[3]], exp_list[[4]]),  # B / C / D
  labels_list  = labels_list,
  fold         = 10,
  collector   = collector
)

# Convert the collector to plain R lists (if needed):
lst <- fh_as_lists(collector)
str(lst$all_result_acc)
}

}
