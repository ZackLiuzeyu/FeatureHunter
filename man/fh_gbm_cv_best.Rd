% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fh_gbm.R
\name{fh_gbm_cv_best}
\alias{fh_gbm_cv_best}
\title{GBM (caret CV-tuned) interface}
\usage{
fh_gbm_cv_best(
  train_exp,
  train_labels,
  test_exp,
  labels_list,
  fold = 10,
  cores = NULL,
  cutoff = c(0.25, 0.5, 0.75),
  auto_th_method = "auto",
  auto_imbalance_thresh = 0.35,
  auto_pr_vs_roc_gate = 0.5,
  collector = collector
)
}
\arguments{
\item{train_exp}{data.frame; training expression matrix (samples x features).}

\item{train_labels}{vector; binary training labels (0/1 or convertible).}

\item{test_exp}{list; external datasets (first = validation B, then C/D/...).}

\item{labels_list}{list; list of label data.frames (A=1, B=2, …; col1=ID, col2=label).}

\item{fold}{integer; CV folds for \code{caret::train} (default 10).}

\item{cores}{integer; number of parallel workers. If \code{NULL}, use \code{detectCores()-1}.}

\item{cutoff}{numeric; fixed cutoffs merged with the auto-threshold from B (default \code{c(0.25,0.5,0.75)}).}

\item{auto_th_method}{Auto threshold method: \code{"youden"} / \code{"f1"} / \code{"auto"}.
With \code{"auto"}, \code{decide_threshold_method()} is used to pick the strategy
based on class imbalance and PR vs ROC performance; otherwise the specified method is used.}

\item{auto_imbalance_thresh}{Imbalance threshold for \code{decide_threshold_method()} (default 0.35).}

\item{auto_pr_vs_roc_gate}{PR-vs-ROC advantage gate for \code{decide_threshold_method()} (default 0.5).}

\item{collector}{(optional) environment collector; if supplied, each cutoff’s results are written into it.}
}
\value{
Invisibly returns a list with \code{acc}, \code{recall}, \code{fs}, \code{summary},
and \code{collector}. If \code{collector} is an environment, results are also
appended into it via \code{.fh_collect()}.
}
\description{
Cross-validated hyperparameter tuning for GBM via \code{caret}, then refit a
single GBM model with \code{bestTune}. On validation set B, automatically
chooses a probability cutoff (F1/Youden or auto), merges it with fixed
thresholds, evaluates on A/B/C/..., and writes results into the optional
\code{collector} environment and also returns them invisibly.
}
\examples{
\dontrun{
# prepare a collector env if you want to aggregate results
collector <- new.env(parent = emptyenv())
out <- fh_gbm_cv_best(
  train_exp    = train_exp,
  train_labels = train_labels,
  test_exp     = list(exp_list[[2]], exp_list[[3]], exp_list[[4]]),  # B / C / D
  labels_list  = labels_list,
  fold         = 10,
  cutoff       = c(0.25, 0.5, 0.75),
  auto_th_method = "auto",
  auto_imbalance_thresh = 0.35,
  auto_pr_vs_roc_gate   = 0.5,
  collector    = collector
)
}
}
