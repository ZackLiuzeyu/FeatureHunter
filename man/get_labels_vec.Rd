% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{get_labels_vec}
\alias{get_labels_vec}
\title{/ Extract a label vector from an object}
\usage{
get_labels_vec(obj, col = 2)
}
\arguments{
\item{obj}{An object carrying labels: a vector/factor, a matrix, or a data.frame.}

\item{col}{\code{obj} 2
Integer column index to use when \code{obj} is a matrix (default 2).}
}
\value{
A label vector, preserving the original atomic type where possible (numeric/character/factor).
}
\description{
Extracts a (binary) label vector from various input types. Priority/order:
\enumerate{
\item If \code{obj} is already a vector/factor, return it;
\item If a matrix, return column \code{col} (default 2);
\item If a data.frame:
If column \code{V2} exists, return it;
Else drop any column identical to row names (ID-like), then auto-detect
a binary column (two levels) and return the first match.
Errors with guidance if no suitable label column can be found.
}
}
\details{
For data.frames, any column identical to row names is treated as an ID column
and dropped before detection. A "binary column" is determined as above. Clear
errors are raised if the requested matrix column is absent or no binary label
column can be identified.
}
\examples{
# /
get_labels_vec(c(0,1,1,0))
# 2 
m <- cbind(id = 1:4, y = c(0,1,1,0))
get_labels_vec(m, col = 2)
# V2
df1 <- data.frame(V1 = 1:4, V2 = c("positive","negative","positive","negative"))
get_labels_vec(df1)
# ID 
df2 <- data.frame(ID = paste0("s",1:4), lab = c(0,1,1,0), check.names = FALSE)
rownames(df2) <- df2$ID
get_labels_vec(df2)
}
