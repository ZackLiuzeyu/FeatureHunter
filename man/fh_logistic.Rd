% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fh_logistic.R
\name{fh_logistic}
\alias{fh_logistic}
\title{Logistic Regression Interface}
\usage{
fh_logistic(
  train_exp,
  train_labels,
  test_exp,
  labels_list,
  all_labels,
  cutoff = c(0.25, 0.5, 0.75),
  auto_th_method = "auto",
  auto_imbalance_thresh = 0.35,
  auto_pr_vs_roc_gate = 0.5,
  collector = collector
)
}
\arguments{
\item{train_exp}{Training expression matrix (rows = samples, cols = features).}

\item{train_labels}{Binary vector or factor of training labels (0/1).}

\item{test_exp}{A list: first element = validation set B; remaining elements = test sets C/D/…}

\item{labels_list}{Label alignment list (for \code{get_labels_for_matrix()}; A=1, B=2, …).}

\item{all_labels}{Merged label data.frame (already built in your workflow).}

\item{cutoff}{Numeric vector of thresholds (default = c(0.25, 0.5, 0.75)); merged with auto threshold from B.}

\item{auto_th_method}{Auto threshold method: \code{"youden"} / \code{"f1"} / \code{"auto"}.
With \code{"auto"}, \code{decide_threshold_method()} is used to adaptively select
based on class imbalance and PR vs ROC performance; otherwise the specified method is used.}

\item{auto_imbalance_thresh}{Imbalance threshold passed to \code{decide_threshold_method()} (default 0.35).}

\item{auto_pr_vs_roc_gate}{PR-vs-ROC advantage ratio gate for \code{decide_threshold_method()} (default 0.5).}

\item{collector}{(optional) environment collector; if supplied, each cutoff’s results are written into it.}
}
\value{
Returns a \code{collector} environment containing four fields:
\itemize{
\item \code{all_result_summary}: predicted result data.frames for each dataset
\item \code{all_result_acc}: accuracy values for each dataset
\item \code{all_result_recall}: recall values for each dataset
\item \code{all_result_FS}: F1 scores for each dataset
}
Use \code{fh_as_lists(collector)} to convert into plain R lists.
}
\description{
Fits a \code{glm(family = binomial)} model on the training set;
automatically selects a threshold on validation set B (via \code{choose_threshold}, default "youden",
with optional adaptive strategy), merges it with fixed cutoffs, and evaluates
F1 / Accuracy / Recall across datasets A/B/C/D…
Optionally writes results into a mutable \code{collector} environment
(created by internal \code{.fh_new_collector()}).
}
\examples{
\dontrun{
# Method 1: use a collector to accumulate results across runs
collector <- .fh_new_collector()
fh_logistic(
  train_exp    = train_exp,
  train_labels = train_labels,
  test_exp     = list(exp_list[[2]], exp_list[[3]], exp_list[[4]]),  # B / C / D
  labels_list  = labels_list,
  all_labels   = all_labels,
  collector    = collector
)
results <- fh_as_lists(collector)
str(results$all_result_acc)

# Method 2: without collector, directly use return value
out <- fh_logistic(
  train_exp    = train_exp,
  train_labels = train_labels,
  test_exp     = list(exp_list[[2]], exp_list[[3]]),
  labels_list  = labels_list,
  all_labels   = all_labels
)
names(out$acc)
}

}
