% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{as_binary01}
\alias{as_binary01}
\title{Convert labels into 0/1 binary vector}
\usage{
as_binary01(
  y,
  pos_alias = c("1", "disease", "case", "positive", "tumor", "cancer", "yes", "true"),
  neg_alias = c("0", "normal", "control", "negative", "no", "false")
)
}
\arguments{
\item{y}{Input label vector: numeric, character, logical, or factor.}

\item{pos_alias}{\verb{"1","disease","case","positive","tumor","cancer","yes","true"}
Character vector of aliases for the positive class (default includes \verb{"1","disease","case","positive","tumor","cancer","yes","true"}).}

\item{neg_alias}{\verb{"0","normal","control","negative","no","false"}
Character vector of aliases for the negative class (default includes \verb{"0","normal","control","negative","no","false"}).}
}
\value{
0 1
An integer vector containing only 0 and 1.
}
\description{
/ \code{"positive"}/\verb{"negative"``"case"}/\code{"control"}
\code{"tumor"}/\code{"normal"}
Converts various label types (numeric, character, logical, factor) into a 0/1
encoding. Supports multiple aliases for positive/negative classes such as
\code{"positive"}/\code{"negative"}, \code{"case"}/\code{"control"}, \code{"tumor"}/\code{"normal"}, etc.
}
\details{
This function ensures consistent binary encoding across different input types.
}
\examples{
# 
as_binary01(c(0,1,1,0))
as_binary01(c(2,3,2,3)) # 
# 
as_binary01(c("case","control","case"))
as_binary01(c("positive","negative","positive"))
# 
as_binary01(c(TRUE, FALSE, TRUE))
}
