% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fh_xgboost.R
\name{fh_lasso_xgboost_default}
\alias{fh_lasso_xgboost_default}
\title{LASSO (default) + XGBoost Interface}
\usage{
fh_lasso_xgboost_default(
  train_exp,
  train_labels,
  test_exp,
  labels_list,
  lassogene,
  cutoff = c(0.25, 0.5, 0.75),
  nround = 100,
  max_depth = 6,
  eta = 0.5,
  auto_th_method = "auto",
  auto_imbalance_thresh = 0.35,
  auto_pr_vs_roc_gate = 0.5,
  collector = collector
)
}
\arguments{
\item{train_exp}{Training expression matrix (samples × features).}

\item{train_labels}{Binary training labels (0/1).}

\item{test_exp}{A list of external datasets; the first is validation set B.}

\item{labels_list}{Label data.frames list (A=1, B=2, …; first two cols = ID, label).}

\item{lassogene}{Character vector of feature names selected by LASSO.}

\item{cutoff}{Numeric vector of fixed thresholds (default \code{c(0.25, 0.5, 0.75)}).}

\item{nround, max_depth, eta}{XGBoost hyperparameters (defaults: 100, 6, 0.5).}

\item{auto_th_method}{Thresholding method: \code{"youden"}/\code{"f1"}/\code{"auto"}.}

\item{auto_imbalance_thresh}{Imbalance threshold for auto mode (default 0.35).}

\item{auto_pr_vs_roc_gate}{PR-vs-ROC gate for auto mode (default 0.5).}

\item{collector}{Optional environment to collect results.}
}
\value{
Collector environment and an invisible list of results
(acc, recall, fs, summary, importance).
}
\description{
Train an XGBoost model (objective = \code{"binary:logistic"}) using only
features in \code{lassogene}. Thresholds are selected on validation set B and
merged with fixed thresholds. Performance (F1/ACC/RECALL) is computed on A/B/C/D…
datasets. Variable importance is also extracted.
}
\examples{
\dontrun{
collector <- fh_new_collector()

out <- fh_lasso_xgboost_default(
  train_exp    = train_exp,
  train_labels = train_labels,
  test_exp     = list(exp_list[[2]], exp_list[[3]], exp_list[[4]]),  # B / C / D
  labels_list  = labels_list,
  lassogene    = lassogene,
  auto_th_method = "auto",
  collector   = collector
)

lists <- fh_as_lists(collector)
}

}
